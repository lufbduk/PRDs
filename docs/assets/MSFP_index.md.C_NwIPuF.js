import{_ as s,c as i,o as t,ae as l}from"./chunks/framework.BNDcSCrg.js";const u=JSON.parse('{"title":"MSFP - 模型静态取件协议","description":"","frontmatter":{},"headers":[],"relativePath":"MSFP/index.md","filePath":"MSFP/readme.md","lastUpdated":1745211794000}'),n={name:"MSFP/index.md"};function e(o,a,r,h,p,d){return t(),i("div",null,a[0]||(a[0]=[l(`<h1 id="msfp-模型静态取件协议" tabindex="-1">MSFP - 模型静态取件协议 <a class="header-anchor" href="#msfp-模型静态取件协议" aria-label="Permalink to &quot;MSFP - 模型静态取件协议&quot;">​</a></h1><p>重现互联网荣光 面向AI的互联网协议 面向AI的通用API规范</p><hr><blockquote><p><strong>注意：以下内容由AI（GitHub Copilot）生成</strong></p></blockquote><p>MSFP (Model Static Fetch Protocol) 是一种以静态网络资源形式实现的 ServerFree AI 工具协议，提供了轻量级的静态版 MCP 替代方案。</p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>MSFP 协议旨在解决传统 MCP（Model Context Protocol）需要部署服务器的问题，通过静态托管平台（如 GitHub Pages、IPFS）分发 AI 工具资源，实现零服务器维护的目标。这使得简单功能的提供者无需付出维护服务器的成本，同时依靠 AI 客户端的代码审查能力和托管平台的资质认证来确保安全性。</p><h2 id="口号" tabindex="-1">口号 <a class="header-anchor" href="#口号" aria-label="Permalink to &quot;口号&quot;">​</a></h2><p>&quot;Fetch AI Tools, Zero Servers&quot;</p><h2 id="核心特点" tabindex="-1">核心特点 <a class="header-anchor" href="#核心特点" aria-label="Permalink to &quot;核心特点&quot;">​</a></h2><ul><li><strong>无服务器架构</strong>：完全基于静态资源，无需服务器部署和维护</li><li><strong>轻量级实现</strong>：提供类似 MCP 的 Resources、Prompts、Tools 和 Roots 功能，但更轻量</li><li><strong>易于发布</strong>：可发布在任何静态托管平台上（GitHub Pages、Netlify、Vercel等）</li><li><strong>安全审查</strong>：依靠 AI 客户端自身能力进行代码安全审查</li><li><strong>低成本分发</strong>：降低 AI 工具分发的门槛和成本</li></ul><h2 id="核心组件" tabindex="-1">核心组件 <a class="header-anchor" href="#核心组件" aria-label="Permalink to &quot;核心组件&quot;">​</a></h2><h3 id="静态资源包-static-bundle" tabindex="-1">静态资源包（Static Bundle） <a class="header-anchor" href="#静态资源包-static-bundle" aria-label="Permalink to &quot;静态资源包（Static Bundle）&quot;">​</a></h3><ul><li><strong>Resources</strong>：预处理的文本/数据（如知识库片段）</li><li><strong>Prompts</strong>：结构化提示词模板（JSON/YAML格式）</li><li><strong>Tools</strong>：可执行逻辑（支持 WASM、Python 脚本等静态代码）</li><li><strong>Roots</strong>：依赖关系的声明文件（类似 <code>package.json</code>）</li></ul><h3 id="协议标识文件-msfp-manifest-json" tabindex="-1">协议标识文件 (<code>msfp-manifest.json</code>) <a class="header-anchor" href="#协议标识文件-msfp-manifest-json" aria-label="Permalink to &quot;协议标识文件 (\`msfp-manifest.json\`)&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data/knowledge.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;prompts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prompts/qa.yaml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;wasm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;search.wasm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;filter.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;certification&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;github_pages&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="基本架构" tabindex="-1">基本架构 <a class="header-anchor" href="#基本架构" aria-label="Permalink to &quot;基本架构&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>MSFP工具包/</span></span>
<span class="line"><span>  ├── msfp-manifest.json  # 协议标识文件</span></span>
<span class="line"><span>  ├── resources/          # 静态资源文件</span></span>
<span class="line"><span>  ├── prompts/            # 提示模板</span></span>
<span class="line"><span>  ├── tools/              # 工具代码（JavaScript/WASM/Python等）</span></span>
<span class="line"><span>  └── docs/               # 文档</span></span></code></pre></div><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><ul><li>简单的数据处理工具</li><li>文本分析和转换工具</li><li>轻量级知识库查询</li><li>低交互性的AI辅助工具</li></ul><h2 id="限制" tabindex="-1">限制 <a class="header-anchor" href="#限制" aria-label="Permalink to &quot;限制&quot;">​</a></h2><ul><li>不支持 MCP 的 Sampling 功能</li><li>只支持单向的传输层</li><li>不适合需要复杂交互的场景</li></ul><h2 id="与-mcp-的比较" tabindex="-1">与 MCP 的比较 <a class="header-anchor" href="#与-mcp-的比较" aria-label="Permalink to &quot;与 MCP 的比较&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th>MSFP</th><th>MCP</th></tr></thead><tbody><tr><td>服务器依赖</td><td>无</td><td>有</td></tr><tr><td>资源分发</td><td>静态托管</td><td>动态服务</td></tr><tr><td>部署复杂度</td><td>低</td><td>中-高</td></tr><tr><td>适用场景</td><td>轻量级工具</td><td>复杂交互场景</td></tr><tr><td>Sampling功能</td><td>不支持</td><td>支持</td></tr><tr><td>传输层</td><td>单向</td><td>双向</td></tr></tbody></table><h2 id="未来发展" tabindex="-1">未来发展 <a class="header-anchor" href="#未来发展" aria-label="Permalink to &quot;未来发展&quot;">​</a></h2><ul><li>建立中央化的工具目录</li><li>开发客户端插件生态</li><li>提升安全验证机制</li></ul><h2 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">​</a></h2><ol><li><p><strong>发布阶段</strong></p><ul><li>开发者将工具包上传至静态托管平台，生成公开访问的URL</li></ul></li><li><p><strong>发现阶段</strong></p><ul><li>AI客户端通过人工输入、社区目录或搜索引擎获取工具包的URL</li></ul></li><li><p><strong>获取阶段</strong></p><ul><li>AI客户端解析 manifest 文件，获取所需的静态资源</li><li>对代码进行安全性分析，确认安全后在沙盒环境中执行</li></ul></li><li><p><strong>执行阶段</strong></p><ul><li>AI客户端执行或解释工具代码，整合执行结果</li></ul></li></ol><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><ol><li>创建你的工具包结构</li><li>编写 msfp-manifest.json 文件</li><li>将工具包部署到静态托管平台</li><li>将URL分享给支持MSFP协议的AI客户端</li></ol><h2 id="贡献指南" tabindex="-1">贡献指南 <a class="header-anchor" href="#贡献指南" aria-label="Permalink to &quot;贡献指南&quot;">​</a></h2><p>我们欢迎社区贡献，包括：</p><ul><li>协议规范改进</li><li>工具包示例</li><li>客户端SDK开发</li><li>文档完善与翻译</li></ul><h2 id="许可证" tabindex="-1">许可证 <a class="header-anchor" href="#许可证" aria-label="Permalink to &quot;许可证&quot;">​</a></h2><p>待定</p>`,35)]))}const c=s(n,[["render",e]]);export{u as __pageData,c as default};
